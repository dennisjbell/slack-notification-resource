meta:
  dockerhub:
    email:    (( vault "secret/dockerhub:email" ))
    username: (( vault "secret/dockerhub:username" ))
    password: (( vault "secret/dockerhub:password" ))
    repository: starkandwaynebot/slack-notification-resource


jobs:
- name: build
  public: true
  serial: true
  plan:
  - get: git
    trigger: true
  - put: edge-image
    params:
      build: git
#   on_failure:
#     put: notify
#       params:
#         text: "slack-notification-resource docker image failed to build"

#- name: rc
#  public: true
#  plan:
#  - aggregate:
#    - get: spruce
#      resource: git-spruce
#      passed: [testflight]
#      trigger: true
#    - get: version
#      trigger: false
#      params: {pre: rc}
#  - put: version
#    params: {file: version/number}

- name: minor
  public: true
  plan:
  - aggregate:
    - get: version
      trigger: false
      params: {bump: minor}
  - put: version
    params: {file: version/number}

- name: major
  public: true
  plan:
  - aggregate:
    - get: version
      trigger: false
      params: {bump: major}
  - put: version
    params: {file: version/number}

- name: promote
  public: true
  serial: true
  plan:
  - aggregate:
    - get: version
    - get: edge
      resource: edge-image
      passed: [build]
      params: { save: true }
    - get: git
      passed: [build]


  - task: release
    config:
      image: docker:///starkandwayne/concourse
      platform: linux
      inputs:
        - name: git
        - name: version
      outputs:
        - name: gh
      run:
        path: ./git/ci/scripts/release
        args: []
      params:
        VERSION_FROM: version/number

  - do: # image push!
    - put: latest-image # as 'latest'
      params:
        load_base:       edge
        load_file:       edge/image
        load_repository: (( grab meta.dockerhub.repository ))
        load_tag:        edge

    - put: latest-image # as 'vX.Y.Z'
      params:
        load_base:       edge
        load_file:       edge/image
        load_repository: (( grab meta.dockerhub.repository ))
        load_tag:        edge

        tag: version/number
        tag_prefix: v

  - aggregate:
    - put: version
      params:
        bump: patch
    - put: git
      params:
        repository: git
        rebase:     true
    - put: github
      params:
        name: gh/name
        tag:  gh/tag
        body: gh/notes.md

resources:
- name: git
  type: git
  source:
    #    uri: https://github.com/cloudfoundry-community/slack-notification-resource.git
    uri: git@github.com:dennisjbell/slack-notification-resource.git
    branch: master
    private_key: (( vault "secret/pipelines/slack-notification-resource/github/dennisjbell:private" ))
    #ignore_paths:
    #  - ci/release_notes.md
    #  - ci/repipe
    #  - ci/pipeline.yml

- name: edge-image
  type: docker-image
  source:
    .: (( inject meta.dockerhub ))
    tag: edge

- name: latest-image
  type: docker-image
  source:
    .: (( inject meta.dockerhub ))
    tag: latest

- name: version
  type: semver
  source :
    driver: s3
    bucket: slack-notification-resource-pipeline
    key: version
    access_key_id: (( vault "secret/aws/cfcommunity:access" ))
    secret_access_key: (( vault "secret/aws/cfcommunity:secret" ))
    initial_version: 0.0.1

#- name: notify
#  type: slack-notification


- name: github
  type: github-release
  source:
    user: dennisjbell
    #user: cloudfoundry-community
    repository: slack-notification-resource
    access_token: (( vault "secret/pipelines/slack-notification-resource/github:token" ))
